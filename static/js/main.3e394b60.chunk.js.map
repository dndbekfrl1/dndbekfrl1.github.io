{"version":3,"sources":["theme.js","components/TextBox.js","components/ThemeChange.js","components/Header.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","Block","styled","div","TextAreaBlock","textarea","TextBox","theme","text","setText","count","setCount","className","ref","onChange","e","target","value","placeholder","onKeyUp","ThemeChangeButton","ThemeChange","useContext","setTheme","onClick","xmlns","width","height","viewBox","d","timerId","DialogBlock","HeaderBlock","header","Header","open","setOpen","content","filename","filetype","a","document","createElement","file","Blob","type","href","URL","createObjectURL","download","click","revokeObjectURL","saveToFile","cur","props","alertDegree","css","Main","useState","setCurSec","setAlertDegree","useRef","useEffect","timer","setTimeout","clearTimeout","undefined","tick","current","App","Provider","app-theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e394b60.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const ThemeContext = createContext();\n","import { current } from \"immer\";\nimport react, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nfunction TextBox({ theme, text, setText, textarea, count, setCount }) {\n  const onChange = (e) => {\n    setText(e.target.value);\n    setCount(count + 1);\n  };\n\n  const onKeyUp = () => {};\n\n  return (\n    <Block>\n      <TextAreaBlock\n        className={\"text_box\" + \" \" + theme}\n        ref={textarea}\n        text={text}\n        onChange={onChange}\n        placeholder=\"5초간 입력이 없으면 글이 사라집니다.\"\n        onKeyUp={onKeyUp}\n      ></TextAreaBlock>\n    </Block>\n  );\n}\n\nconst Block = styled.div`\n  height: 90%;\n  position: relative;\n\n  span {\n    position: absolute;\n    bottom: 1.2em;\n    right: 1.2em;\n  }\n`;\n\nconst TextAreaBlock = styled.textarea`\n  outline: none;\n  overflow: auto;\n  resize: none;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n`;\n\nexport default TextBox;\n","import react, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { ThemeContext } from \"../theme\";\n\nfunction ThemeChange() {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const onClick = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  return (\n    <>\n      <ThemeChangeButton\n        className={\"toggle_btn\" + \" \" + theme}\n        onClick={onClick}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"22\"\n          height=\"22\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M11 6.999c2.395.731 4.27 2.607 4.999 5.001.733-2.395 2.608-4.269 5.001-5-2.393-.731-4.268-2.605-5.001-5-.729 2.394-2.604 4.268-4.999 4.999zm7 7c1.437.438 2.562 1.564 2.999 3.001.44-1.437 1.565-2.562 3.001-3-1.436-.439-2.561-1.563-3.001-3-.437 1.436-1.562 2.561-2.999 2.999zm-6 5.501c1.198.365 2.135 1.303 2.499 2.5.366-1.198 1.304-2.135 2.501-2.5-1.197-.366-2.134-1.302-2.501-2.5-.364 1.197-1.301 2.134-2.499 2.5zm-6.001-12.5c-.875 2.873-3.128 5.125-5.999 6.001 2.876.88 5.124 3.128 6.004 6.004.875-2.874 3.128-5.124 5.996-6.004-2.868-.874-5.121-3.127-6.001-6.001z\" />\n        </svg>\n      </ThemeChangeButton>\n    </>\n  );\n}\n\nconst ThemeChangeButton = styled.div`\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  border-radius: 100%;\n`;\n\nexport default ThemeChange;\n","import react, { createElement, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport ThemeChange from \"./ThemeChange\";\nimport { ThemeContext } from \"styled-components\";\nfunction saveToFile(content, filename, filetype) {\n  const a = document.createElement(\"a\");\n  const file = new Blob([content], { type: filetype });\n\n  a.href = URL.createObjectURL(file);\n  a.download = filename;\n  a.click();\n\n  URL.revokeObjectURL(a.href);\n}\n\nfunction Header({ theme, text, open, setOpen }) {\n  const onClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <>\n      {open && (\n        <DialogBlock className=\"\">\n          <div className=\"dialogWrapper\">\n            <div className=\"dialog\">\n              <div>다운로드 되었습니다.</div>\n              <button onClick={() => onClick()}>확인</button>\n            </div>\n          </div>\n        </DialogBlock>\n      )}\n      <HeaderBlock className=\"header\">\n        <div className=\"title\">당신의 숙제</div>\n        <div className=\"util\">\n          <button\n            className={\"export_btn\" + \" \" + theme}\n            onClick={() => {\n              onClick();\n              saveToFile(text, \"딩신의 숙제.txt\", \"text/plain\");\n            }}\n          >\n            내보내기\n          </button>\n          <ThemeChange />\n        </div>\n      </HeaderBlock>\n    </>\n  );\n}\n\nconst DialogBlock = styled.div`\n  width: 100%;\n  height: 100%;\n  z-index: 999;\n  position: absolute;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  display: flex;\n  justify-content: center;\n  .dialog > button {\n    margin: 4px 0 0 0;\n  }\n`;\n\nconst HeaderBlock = styled.header`\n  width: 100%;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  font-size: 24px;\n  padding-top: 20px;\n  padding-bottom: 10px;\n  font-weight: bold;\n  margin-bottom: 8px;\n  .util {\n    display: flex;\n    align-items: flex-end;\n  }\n  .export_btn {\n    line-height: 20px;\n    padding: 8px 12px;\n    margin-right: 8px;\n  }\n`;\n\nexport default Header;\n","import react from \"react\";\nimport { useState, useRef, useEffect, useContext } from \"react\";\nimport { ThemeContext } from \"../theme\";\nimport TextBox from \"./TextBox\";\nimport Header from \"./Header\";\nimport styled, { css } from \"styled-components\";\n\nlet to = 6;\nlet cur = 0;\nlet timerId;\n\n//TODO 키보드 입력도\n\nfunction Main() {\n  const { theme } = useContext(ThemeContext);\n\n  const [open, setOpen] = useState(false); // dialog open\n  const [text, setText] = useState(null); // textarea text\n  const [count, setCount] = useState(0); // text count\n  const [curSec, setCurSec] = useState(0);\n  const [alertDegree, setAlertDegree] = useState(0); // alert backgrond color change\n  const textarea = useRef(); // textarea\n\n  useEffect(() => {\n    const setTimer = () => {\n      //timer initial\n      if (typeof timerId === \"number\") {\n        cur = 0;\n        setCurSec(0);\n        clearTimeout(timerId);\n        timerId = undefined;\n        setAlertDegree(cur);\n      }\n      timerId = setTimeout(function tick() {\n        // if file is being saving, pause timer\n        if (open) {\n          cur = 0;\n          setCurSec(0);\n        }\n\n        if (cur < to) {\n          if (typeof timerId === \"number\") {\n            setAlertDegree(cur * 20);\n            timerId = setTimeout(tick, 1000);\n            setCurSec(cur);\n          }\n        }\n        cur += 1;\n\n        if (cur === to) {\n          textarea.current.value = \"\";\n          setCount(0);\n        }\n      }, 1000);\n    };\n\n    const timer = setTimeout(() => {\n      setTimer();\n    });\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [text, open]);\n\n  let countDownDiv;\n\n  return (\n    <div className=\"main\">\n      <div className=\"wrapper\">\n        {/* <CountDownBlock className={\"countDown\" + \" \" + curSec}>\n          {curSec}\n        </CountDownBlock> */}\n        <Header theme={theme} text={text} open={open} setOpen={setOpen} />\n        <TextBox\n          theme={theme}\n          text={text}\n          setText={setText}\n          textarea={textarea}\n          count={count}\n          setCount={setCount}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst CountDownBlock = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 100%;\n  position: absolute;\n  right: 50%;\n`;\n\nconst AlertBlockLeft = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 20%;\n  left: 0;\n\n  /* background: ${(props) =>\n    props.alertDegree\n      ? css`linear-gradient(\n    90deg,\n    rgba(109, 127, 141, 0.9) 0%,\n    rgba(0, 0, 0, 0) ${props.alertDegree}%\n  )`\n      : css``}; */\n`;\n\nconst AlertBlockRight = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 20%;\n  right: 0;\n\n  /* background: ${(props) =>\n    props.alertDegree\n      ? css`linear-gradient(\n    -90deg,\n    rgba(22, 255, 0, 0.8) 0%,\n    rgba(0, 0, 0, 0) ${props.alertDegree}%\n  )`\n      : css``}; */\n`;\n\nexport default Main;\n","import Main from \"./components/Main\";\nimport \"./App.css\";\nimport { useState, useRef, useContext } from \"react\";\nimport { ThemeContext } from \"./theme\";\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      <div className={\"App\" + \" \" + theme} app-theme={theme}>\n        <Main />\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}